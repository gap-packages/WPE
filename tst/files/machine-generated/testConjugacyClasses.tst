# Generated by dev/tests/conjugacyClasses/generate.g
# Do not edit this file manually!
gap> START_TEST("testConjugacyClasses.tst");
gap> ReadPackage("WPE","tst/testConjugacyClasses.g");;

#
gap> K := Group([ () ]);;
gap> H := Group([ () ]);;
gap> size := 1;;
gap> TestConjugacyClasses(K, H, size);
true

#
gap> K := Group([ () ]);;
gap> H := Group([ (1,2,3,4,5), (1,2) ]);;
gap> size := 7;;
gap> TestConjugacyClasses(K, H, size);
true

#
gap> K := Group([ () ]);;
gap> H := Group([ (1,2,3,4,5), (3,4,5) ]);;
gap> size := 5;;
gap> TestConjugacyClasses(K, H, size);
true

#
gap> K := Group([ (1,2,3,4), (1,2) ]);;
gap> H := Group([ () ]);;
gap> size := 5;;
gap> TestConjugacyClasses(K, H, size);
true

#
gap> K := Group([ (1,2,3), (2,3,4) ]);;
gap> H := Group([ () ]);;
gap> size := 4;;
gap> TestConjugacyClasses(K, H, size);
true

#
gap> K := Group([ (1,2,3,4), (1,2) ]);;
gap> H := Group([ (1,2,3,4,5), (1,2) ]);;
gap> size := 506;;
gap> TestConjugacyClasses(K, H, size);
true

#
gap> K := Group([ (1,2,3,4), (1,2) ]);;
gap> H := Group([ (1,2,3,4,5), (3,4,5) ]);;
gap> size := 337;;
gap> TestConjugacyClasses(K, H, size);
true

#
gap> K := Group([ (1,2,3,4), (1,2) ]);;
gap> H := Group([ (1,2,3,4,5), (2,5)(3,4) ]);;
gap> size := 512;;
gap> TestConjugacyClasses(K, H, size);
true

#
gap> K := Group([ (1,2,3,4), (1,2) ]);;
gap> H := Group([ (1,2,3)(4,5) ]);;
gap> size := 1100;;
gap> TestConjugacyClasses(K, H, size);
true

#
gap> STOP_TEST("testConjugacyClasses.tst");
